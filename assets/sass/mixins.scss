@import "variables.scss";

// Font
// creates pre-made settings for a primary font
@mixin primary-font {
  font-family: $primary-font;
  color: $primary-font-color;
  font-weight: 700;
  font-size: 2em;
}

// creates pre-made settings for a secondary font
@mixin secondary-font {
  font-family: $secondary-font;
  color: $secondary-font-color;
  font-size: 1.3em;
}

// take units off to make a number arbitrary - used for the column count in grid.scss and em-calc below
@function strip-unit($number) {
  @if type-of($number) == "number" and not unitless($number) {
    @return $number / ($number * 0 + 1);
  }
  @return $number;
}

// calculated the em vlaue from entering a pixel value
@function em-calc($px) {
  $em-px: strip-unit(($px / $em));
  $em-size: $em-px * 1em;
  @return ($em-size);
}

// Display
// quickly set a breakpoint for tablet and desktop
@mixin tablet {
  @media (min-width: #{$breakpoint-medium}) {
    @content;
  }
}

@mixin desktop {
  @media (min-width: #{$breakpoint-large}) {
    @content;
  }
}

// Random

@mixin center {
  display: block;
  margin: 0 auto;
}

// rotates something and works in all browsers
@mixin rotate($rotate-value) {
  -moz-transform: rotate($rotate-value);
  -webkit-transform: rotate($rotate-value);
  transform: rotate($rotate-value);
}

// create grey images
@mixin grayscale {
  -webkit-filter: grayscale(100%);
  filter: grayscale(100%);
}

// change the brightness of images
@mixin brightness($brightness-value) {
  -webkit-filter: brightness($brightness-value);
  filter: brightness($brightness-value);
}

// put a box-shadow on images
@mixin box-shadow {
  box-shadow: $shadow;
  -webkit-box-shadow: $shadow;
  -moz-box-shadow: $shadow;
}

// quickly create a text shadow of a certain colour
@mixin text-shadow($color) {
  text-shadow: -5px 0 $color, 0 5px $color, 5px 0 $color, 0 -5px $color;
}

// for the main images - makes them have a parallax effect
@mixin parallax {
  background-attachment: fixed;
  background-position: center;
  background-repeat: no-repeat;
  background-size: cover;
}

// quickly makes a link have the same colour in all states
@mixin link-color($color) {
  a:link {
    color: $color;
  }
  a:visited {
    color: $color;
  }
  a:active {
    color: $color;
  }
}
